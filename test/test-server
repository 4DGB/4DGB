#!/usr/bin/env python

import urllib.request 
import json
import sys
from pypac import PACSession

#
# handle command line arguments
#
url = ""
port = ""
if (len(sys.argv) != 3):
    print("ERROR: must include URL and PORT") 
    exit(0)
else:
    url = sys.argv[1]
    port = sys.argv[2]

# respect local proxy settings
session = PACSession()

url = "{}:{}".format(url, port)
print("Testing server at: {}".format(url))
print("")

#
# all gene names 
#
print("Testing gene query ...")
with urllib.request.urlopen('{}/genes'.format(url)) as response:
    jstring = response.read()
    jdata = json.loads(jstring)
    jdatastrings = [str(int) for int in jdata['genes']]
    print("genes :{}".format(", ".join(jdatastrings)))
print("")

#
# segments in a gene
#
print("Testing segments in gene query")
genename = "Ctag2"
with urllib.request.urlopen('{}/segments/{}'.format(url, genename)) as response:
    jstring = response.read()
    jdata = json.loads(jstring)
    jdatastrings = [str(int) for int in jdata['segments']]

    print("segments ({}): ".format(genename) + ", ".join(jdatastrings))
print("")

#
# genes in a segment
#
print("Testing segments in gene query")
segmentid = 326
with urllib.request.urlopen('{}/genes/{}'.format(url, segmentid)) as response:
    jstring = response.read()
    jdata = json.loads(jstring)
    jdatastrings = [str(int) for int in jdata['genes']]
    print("genes ({}): ".format(segmentid) + ", ".join(jdatastrings))

print("")

#
#
#
print("Testing epigenetics query")
identifier = "K27"
state = 0
for state in [0, 1]:
    print("state: {}".format(state))
    with urllib.request.urlopen('{}/segepi/{}/{}'.format(url, identifier, state)) as response:
        jstring = response.read()
        jdata = json.loads(jstring)

        print("num epigenetics attributes   : {}".format(len(jdata["data"])))
        print("epigenetics attribute (id 40): {}".format(jdata["data"][39]))

print("Testing bbi query")
state = "0" 
ID    = 0
chrom = "chrX"
begin = 4000000
end   = 6000000
for state in [0, 1]:
    print("state: {}".format(state))
    with urllib.request.urlopen('{}/bbi/{}/{}/{}/{}/{}'.format(url, state, ID, chrom, begin, end)) as response:
        jstring = response.read()
        jdata = json.loads(jstring)

        print("bbi:")
        print(jdata)
