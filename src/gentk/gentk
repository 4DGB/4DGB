#!/usr/bin/env python

import argparse
import jsonschema
import json
import sys

# ----------------------------------------------------------------------------
#
# parse command line options
#
# ----------------------------------------------------------------------------

GENTK_VERSION = "0.5.4" 

helptext = "\n\
\n\
examples: \n\
\n\
    gentk --dump --project some/directory\n\
       dump project information to stoud\n\
  \n\
" 
 
# normal option parsing 
parser = argparse.ArgumentParser(  
            description="gentk: command line tool for the gentk module", 
            epilog=helptext, 
            formatter_class=argparse.RawDescriptionHelpFormatter ) 

parser.add_argument(    "--dump", 
                        action='store_true',
                        help="dump the project data") 
 
parser.add_argument(    "--project", 
                        required=True,
                        help="input project file") 

parser.add_argument(    "--version", 
                        action='version',
                        version='{}'.format(GENTK_VERSION),
                        help="print version of this script") 

parser.add_argument(    "--verbose", 
                        action='store_true',
                        help="be verbose") 

args = parser.parse_args()

if False:
    # TODO: load schema from a remote location
    with open("./doc/design/schema/v0.5/schema.json", "r") as sfile:
        schema = json.load(sfile)

if args.dump:
    with open("{}/project.json".format(args.project), "r") as pfile:
        pdata = json.load(pfile) 

        print("project: {}".format(pdata["project"]["name"]))
        print("datasets:")
        for d in pdata["datasets"]:
            print("    {}:".format(d["name"]))


