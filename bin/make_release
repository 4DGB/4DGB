#!/bin/bash

read -r -d '' HELPTEXT<<'ENDHELP'
    make_release

    Build a project and place a ready-to-go release in the 'release' directory.

    Usage:
        make_release [--help|-h] PROJECT

    PROJECT is the name of a project directory (in the 'projects' directory).

    Options:
        --help, -h      Print this help and exit
ENDHELP

# Reset IFS (newline, space, tab)
IFS='
 	'

set -eu

if [ $# -lt 1 ] ; then
    echo "ERROR: Must provide project directory:" >&2
    echo "Example:" >&2
    echo "" >&2
    echo "    make_release <project>" >&2
    echo "" >&2
    exit 1
fi

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "$HELPTEXT";
    exit
fi

if ! [ -d "projects" ] ; then
    echo "ERROR: Could not find projects directory. Are you running this from the repository root?" >&2
    exit 1
fi

PROJECT="${1%/}"
SRC="projects/$PROJECT"
DEST="release/$PROJECT"

if ! [ -d "$SRC" ] || [ -z "$PROJECT" ] ; then
    echo "ERROR: Could not find project '$PROJECT'" >&2
    echo "Available projects are:" >&2
    for DIR in projects/* ; do
        [ -d "$DIR" ] && echo "    $(basename "$DIR")" >&2
    done
    exit 1
fi

echo ""
echo "Making a release for project '$PROJECT'"

# initialize the database
echo ""
echo "Initializing database ..."
./bin/db_pop "$SRC"

echo ""
echo "Cleaning release ..."
# clean up
rm -rf "$DEST"

echo ""
echo "Creating new release ..."
# new install
mkdir -p "$DEST/server" "$DEST/gentk"

echo ""
echo "Building Javascript library ..."
npx webpack --config client-js/webpack.config.js
cp  client-js/gtk-dist/gtk.min.js server/static/gtk/js/gtk.min.js

echo ""
echo "Copying files ..."

# Server and served content
cp -a server/static "$DEST/server/static"
cp server/gtkserver.py "$DEST/server"
cp -a "$SRC" "$DEST/server/static/project"

cp server/license.md "$DEST"

echo ""
echo "Copying gentk python package ..."
cp -a client-py/gentk "$DEST/gentk"
cp client-py/requirements.txt client-py/genex "$DEST"

echo ""
echo "Done!"
